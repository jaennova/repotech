---
import Layout from '../../layouts/Layout.astro';
import axios from 'axios';

const { id } = Astro.params;

let resource = null;
let error = null;

try {
  const response = await axios.get(`https://repo-tech.onrender.com/recursos/${id}`);
  resource = response.data;
} catch (e) {
  error = 'Recurso no encontrado';
}
---

<Layout title={resource ? resource.titulo : 'Recurso no encontrado'}>
  {error && (
    <div class="bg-red-50 p-4 rounded-md">
      <p class="text-red-700">{error}</p>
      <a href="/" class="text-red-700 underline">Volver al inicio</a>
    </div>
  )}
  
  {resource && (
    <div class="bg-white shadow-sm rounded-lg p-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-4">{resource.titulo}</h1>
      
      <div class="mb-6">
        <h2 class="text-lg font-medium text-gray-900 mb-2">Descripción</h2>
        <p class="text-gray-600">{resource.descripcion}</p>
      </div>
      
      <div class="mb-6">
        <h2 class="text-lg font-medium text-gray-900 mb-2">URL</h2>
        <a
          href={resource.url}
          target="_blank"
          rel="noopener noreferrer"
          class="text-blue-600 hover:underline"
        >
          {resource.url}
        </a>
      </div>
      
      <div class="mb-6">
        <h2 class="text-lg font-medium text-gray-900 mb-2">Tags</h2>
        <div class="flex flex-wrap gap-2">
          {resource.tags.map((tag: string) => (
            <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
              {tag}
            </span>
          ))}
        </div>
      </div>
      
      <div class="text-sm text-gray-500">
        <p>Creado: {new Date(resource.fecha_creacion).toLocaleDateString()}</p>
        <p>Última actualización: {new Date(resource.fecha_actualizacion).toLocaleDateString()}</p>
      </div>
    </div>
  )}
</Layout>